@page "/todo"

<h3>Number of Items todo: @todos.Count(todo => !todo.IsDone) </h3>
<input placeholder="Somthing todo" @bind="newTodo"/>
<button @onclick="AddTodo">Add item</button>
<br>
<ul>
    @foreach (var item in todos)
    {
        <li>
            <input type="checkbox" @onclick="(e) => UpdateIsDone(item)" @bind="item.IsDone"> @item.Title
            <button @onclick="(e) => AddSubItem(item)" >Add Sub Items</button>
            <button @onclick="(e) => DeleteTodo(item)">Delete todo</button>

            
            @if (item.SubItems != null) {
                <span># of SubItem: @item.SubItems.Count(e => !e.SubIsDone)</span>
                <ul>
                @foreach (var subitem in item.SubItems) {
                    <li>
                        <input type="checkbox" @bind="subitem.SubIsDone"> @subitem.SubTitle
                        <button @onclick="(e) => DeleteSubItem(item, subitem)">Delete Sub Item</button>
                    </li>
                }
                </ul>
            }
        </li>
    }
</ul>


@code
{
    private List<TodoItem> todos = new();
    private string newTodo;
    
    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem {Title = newTodo});
            newTodo="";
        }
    }

    private void AddSubItem(TodoItem currentItem)
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            if (currentItem.SubItems == null) currentItem.SubItems = new List<TodoSubItems>();
            currentItem.SubItems.Add(new TodoSubItems {SubTitle = newTodo});
            newTodo="";
        }
    }

    private void UpdateIsDone(TodoItem currentItem)
    {
        if (currentItem.SubItems != null) {
            foreach (var subitem in currentItem.SubItems) {
            subitem.SubIsDone = true;
        }

        }
        
    }

    private void DeleteTodo (TodoItem currentItem)
    {
        todos.Remove(currentItem);
    }

    private void DeleteSubItem (TodoItem currentItem, TodoSubItems currentSubItem)
    {
        currentItem.SubItems.Remove(currentSubItem);
    }

    public class TodoItem 
    {
        public string Title {get; set;}
        public bool IsDone {get; set;}
        public List<TodoSubItems> SubItems {get; set;}
    }

    public class TodoSubItems 
    {
        public string SubTitle {get; set;}
        public bool SubIsDone {get; set;}
    }
}